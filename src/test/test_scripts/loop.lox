// Regular while loop
var a = 0;
while (a <= 10) {
    a = a + 1;
}
assert(a == 11);


// Regular for loop
var b = 0;
for (var i = 0; i < 5; i = i + 1) {
    b = b + i;
}
assert(b == 10);

// For loop without an initializer or step
var c = 0;
for (;c < 5;) {
    c = c + 1;
}
assert(c == 5);


// Lox doesn't have a break keyword, so to test the infinite for loop we use return in a function
// Otherwise I wouldn't be mixing all these concepts in a single test file
fun infLoop(limit) {
    var result = 0;
    for (;;) {
        result = result + 1;
        if (result >= limit) {
            return result;
        }
    }
}

var infLoopCheck = infLoop(5);
assert(infLoopCheck == 5);